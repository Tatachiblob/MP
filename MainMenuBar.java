//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;

public class MainMenuBar extends JFrame implements ActionListener{//, MenuListener{
    
    private EnrollmentSystem es;
    private JMenuBar menu;
    private JPanel registerPanel;
    private JPanel editPanel;
    private JPanel addPanel;
    private JPanel openPanel;
    private JPanel viewPanel;
    
    public MainMenuBar(EnrollmentSystem es) {
        super("Machine Project");
        
        this.es = es;
        this.menu = new JMenuBar();
        this.registerPanel = new JPanel();
        registerPanel = makeRegister();
        this.editPanel = new JPanel();
        editPanel = makeEdit();
        this.addPanel = new JPanel();
        this.openPanel = new JPanel();
        this.viewPanel = new JPanel();
        
        setDefaultCloseOperation (EXIT_ON_CLOSE);
        initScreen();
        setSize(500,500);
        setVisible (true);
    }
    
    public void initScreen(){
        JPanel p = new JPanel(new BorderLayout());
        //construct preComponents
        
        JMenu adminMenu = new JMenu ("Admin");
        JMenuItem registerItem = new JMenuItem ("Register Student Account");
        registerItem.addActionListener(this);
        adminMenu.add (registerItem);
        JMenuItem editItem = new JMenuItem ("Edit Student Account");
        editItem.addActionListener(this);
        adminMenu.add(editItem);
        JMenuItem addItem = new JMenuItem ("Add Course");
        addItem.addActionListener(this);
        adminMenu.add(addItem);
        JMenuItem openItem = new JMenuItem ("Open Section");
        openItem.addActionListener(this);
        adminMenu.add(openItem);
        JMenuItem viewItem = new JMenuItem ("View Class List");
        viewItem.addActionListener(this);
        adminMenu.add(viewItem);
        JMenuItem logoutItem = new JMenuItem("Logout");
        logoutItem.addActionListener(this);
        adminMenu.add(logoutItem);
        
        
        JMenu studentMenu = new JMenu ("Student");
        JMenuItem enlistItem = new JMenuItem ("Enlist In Section");
        enlistItem.addActionListener(this);
        studentMenu.add (enlistItem);
        JMenuItem removeItem = new JMenuItem ("Remove Enlistment");
        removeItem.addActionListener(this);
        studentMenu.add (removeItem);
        JMenuItem enrollItem = new JMenuItem ("Enroll");
        enrollItem.addActionListener(this);
        studentMenu.add (enrollItem);
        JMenuItem eafItem = new JMenuItem ("View EAF");
        eafItem.addActionListener(this);
        studentMenu.add (eafItem);
        logoutItem = new JMenuItem("Logout");
        logoutItem.addActionListener(this);
        studentMenu.add(logoutItem);
        
        registerPanel.setVisible(false);
        editPanel.setVisible(false);
        
        //construct components
        menu.add(adminMenu);
        menu.add(studentMenu);
        p.add(menu);
        add(p,BorderLayout.NORTH);
        add(registerPanel, BorderLayout.CENTER);
        //add(editPanel, BorderLayout.CENTER);
        
        if(es.getAdmin().getIsLogin()){
            adminMenu.setEnabled(true);
            studentMenu.setEnabled(false);
        }
        else if(es.getCurrentStudent().getIsLogin()){
            adminMenu.setEnabled(false);
            studentMenu.setEnabled(true);
            if(es.getCurrentStudent().getIsEnrolled()){
                enlistItem.setEnabled(false);
                removeItem.setEnabled(false);
                enrollItem.setEnabled(false);
                eafItem.setEnabled(true);
            }
            else{
                enlistItem.setEnabled(true);
                removeItem.setEnabled(true);
                enrollItem.setEnabled(true);
                eafItem.setEnabled(false);
            }
        }

        //add components
        p.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Menu Panel"));
        p.setBackground(new Color(127,191,127));
        

    }

    public JPanel makeRegister(){
        JPanel returnable = new JPanel(new FlowLayout());
        RegisterGUI reg = new RegisterGUI(es);
        reg.setVisible(false);
        returnable.add(reg.getContentPane());
        return returnable;
    }
    
    public JPanel makeEdit(){
        JPanel returnable = new JPanel(new FlowLayout());
        EditStudentGUI edit = new EditStudentGUI(es);
        edit.setVisible(false);
        returnable.add(edit.getContentPane());
        return returnable;
    }
    
    @Override
    public void actionPerformed(ActionEvent e){
        if(e.getActionCommand().equals("Register Student Account")){
            registerPanel.setVisible(true);
            editPanel.setVisible(false);
            addPanel.setVisible(false);
            openPanel.setVisible(false);
            viewPanel.setVisible(false);
        }
        if(e.getActionCommand().equals("Edit Student Account")){
            
        }
        if(e.getActionCommand().equals("Add Course")){
            
        }
        if(e.getActionCommand().equals("Open Section")){
            
        }
        if(e.getActionCommand().equals("View Class List")){
            
        }
        if(e.getActionCommand().equals("Enlist in Section")){
            
        }
        if(e.getActionCommand().equals("Remove Enlistment")){
            
        }
        if(e.getActionCommand().equals("Enroll")){
            
        }
        if(e.getActionCommand().equals("View EAF")){
            
        }
        if(e.getActionCommand().equals("Logout")){
            LoginGUI login = new LoginGUI(es);
            this.dispose();
        }
    }
    /*
    @Override
    public void menuSelected(MenuEvent me){
        if(me.getSource().equals("Register Student Account")){
            System.out.println("Hello");
        }
    }
    
    @Override
    public void menuDeselected(MenuEvent me){
        
    }
    
    @Override
    public void menuCanceled(MenuEvent me){
        
    }*/

    public static void main (String[] args) {
        EnrollmentSystem es = new EnrollmentSystem();
        Account a = new Account("admin", "DLSU");
        Student yuta = new Student("11512709", "Komoro9!", "Inoue", "Yuta", 0, 10);
        es.login(a);
        //es.RegisterStudentAccount(yuta);
        //es.logout();
        //a = new Account("11512709", "Komoro9!");
        //es.login(a);
        //es.enroll();
        
        MainMenuBar e = new MainMenuBar(es);
        
    }
    
}
